@Override
public int createUser(UserDto userDto) {
    // Create Keycloak UserRepresentation
    UserRepresentation userRepresentation = new UserRepresentation();
    userRepresentation.setEnabled(true);
    userRepresentation.setFirstName(userDto.getFirstName());
    userRepresentation.setUsername(userDto.getUserName());
    userRepresentation.setLastName(userDto.getLastName());
    userRepresentation.setEmail(userDto.getEmail());
    userRepresentation.setEmailVerified(false);

    // Set Password Credentials
    CredentialRepresentation credentialRepresentation = new CredentialRepresentation();
    credentialRepresentation.setValue(userDto.getPassword());
    credentialRepresentation.setType(CredentialRepresentation.PASSWORD);
    userRepresentation.setCredentials(List.of(credentialRepresentation));

    UsersResource usersResource = getUsersResources();
    
    try (Response response = usersResource.create(userRepresentation)) {
        if (response.getStatus() == 201) {
            // Extract Keycloak User ID
            String keycloakUserId = response.getLocation().getPath().replaceAll(".*/([^/]+)$", "$1");
            System.out.println("User created with ID: " + keycloakUserId);

            // Store the user in MongoDB with the same Keycloak ID
            MongoUser mongoUser = new MongoUser();
            mongoUser.setId(keycloakUserId); // Keycloak ID as MongoDB ID
            mongoUser.setFirstName(userDto.getFirstName());
            mongoUser.setLastName(userDto.getLastName());
            mongoUser.setEmail(userDto.getEmail());
            mongoUser.setExtraField(userDto.getExtraField()); // Any extra fields

            mongoUserRepository.save(mongoUser); // Save to MongoDB

            return response.getStatus();
        } else {
            System.out.println("Error creating user: " + response.getStatus());
            return response.getStatus();
        }
    } catch (Exception e) {
        throw new RuntimeException("Error creating user: " + e.getMessage());
    }
}
